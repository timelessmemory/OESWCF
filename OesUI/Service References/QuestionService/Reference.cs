//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OesUI.QuestionService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="QuestionService.IQuestionService")]
    public interface IQuestionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/FindQuestionByExamId", ReplyAction="http://tempuri.org/IQuestionService/FindQuestionByExamIdResponse")]
        OesWCFContract.QuestionDS.ExamQuestionDataTable FindQuestionByExamId(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/QueryQuestionCount", ReplyAction="http://tempuri.org/IQuestionService/QueryQuestionCountResponse")]
        System.Nullable<int> QueryQuestionCount(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/QueryHaveAnsweredQuestionNumber", ReplyAction="http://tempuri.org/IQuestionService/QueryHaveAnsweredQuestionNumberResponse")]
        int QueryHaveAnsweredQuestionNumber(int userId, int examId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/FindUserAnswer", ReplyAction="http://tempuri.org/IQuestionService/FindUserAnswerResponse")]
        OesWCFContract.QuestionDS.exam_answer_detailDataTable FindUserAnswer(int userId, int examId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQuestionService/InsertUserAnswer", ReplyAction="http://tempuri.org/IQuestionService/InsertUserAnswerResponse")]
        void InsertUserAnswer(int userId, int examId, int questionId, string userAnswer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQuestionServiceChannel : OesUI.QuestionService.IQuestionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuestionServiceClient : System.ServiceModel.ClientBase<OesUI.QuestionService.IQuestionService>, OesUI.QuestionService.IQuestionService {
        
        public QuestionServiceClient() {
        }
        
        public QuestionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuestionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuestionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public OesWCFContract.QuestionDS.ExamQuestionDataTable FindQuestionByExamId(System.Nullable<int> id) {
            return base.Channel.FindQuestionByExamId(id);
        }
        
        public System.Nullable<int> QueryQuestionCount(int id) {
            return base.Channel.QueryQuestionCount(id);
        }
        
        public int QueryHaveAnsweredQuestionNumber(int userId, int examId) {
            return base.Channel.QueryHaveAnsweredQuestionNumber(userId, examId);
        }
        
        public OesWCFContract.QuestionDS.exam_answer_detailDataTable FindUserAnswer(int userId, int examId) {
            return base.Channel.FindUserAnswer(userId, examId);
        }
        
        public void InsertUserAnswer(int userId, int examId, int questionId, string userAnswer) {
            base.Channel.InsertUserAnswer(userId, examId, questionId, userAnswer);
        }
    }
}
